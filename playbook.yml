# Man, if I had a properly *testable* dev setup, that'd be sweet.
---
- hosts: all

  #~/Install doesn't work as the dir so hard-coding for now; at very least
  #   should be variable so we could theoretically use a base box w.out /vagrant
  #   also could just generate dir from root. Let's do that.
  # Actually I like it better in not a home BUT it should work... happens in
  #   the zsh role.
  pre_tasks:
    - name: Create Install dir where we'll store all our binaries
      file: path=/AnsibleInstall state=directory
    - name: Create Java dir inside Install dir where we'll store all our binaries
      file: path=/AnsibleInstall/Java state=directory
    #Would love to do this not cludgy; one way would be to have the base box
    #just have it, but meh. Even betterer would be to figure out how to just
    #force installation of dependencies.
    - name: Install openjdk-6, which other stuff will otherwise complain about
      #shell: sudo apt-get install openjdk-6-jre
      shell: yes 'Y' | apt-get install openjdk-6-jre
      ignore_errors: yes
    #Urm, top doesn't fail anymore, don't need?
    - name: ...which will fail, so we will need to install the dependencies
      shell: yes 'Y' | sudo apt-get -f install

  roles:
    # Two options here;
    #
    # Option 1) make these *not* auto-git dirs so they are commited,
    # update manually. Then we know the state. But if role breaks, we won't
    # get update.
    #
    # Option 2) Keep as git repo so it updates, but then might break stuff if
    #   it's doing something unexpected.
    - { role: ansible-role-intellij, intellij_version: 2016.1.1, intellij_tmp: /AnsibleInstall/IntelliJ.deb }
    #- { role: ansible-oracle-java, java_download_path: /AnsibleInstall/Java }
    - { role: ansible-role-scala, scala_sbt_tmp_deb: /AnsibleInstall/sbt.deb}
    #- ansible-ohmyzsh
    #role: foo_app_instance, dir: '/opt/a',  app_port: 5000
  sudo: true

  tasks:
    # Add apt repos
    - name: add atom path to repo
      apt_repository: repo='ppa:webupd8team/atom' state=present
    - name: add java repo
      apt_repository: repo='ppa:webupd8team/java' state=present
    - name: update apt cache
      apt: update_cache=yes

    #Install atom; how do we import settings for this and other stuff automatically?
    - name: install atom
      apt: name=atom state=present force=yes

    - name: java 8 license, 1
      shell: echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections

    - name: java 8 license, 2
      shell: echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections

    - name: install java 8
      apt: name=oracle-java8-installer state=present force=yes

    #Install npm (will have to download somewhere and setup)
    #curl -sL https://deb.nodesource.com/setup_5.x | sudo -E bash -
    #sudo apt-get install -y nodejs

    #DB and standard stuff
    - name: install git
      apt: name=git state=present force=yes
    - name: install tilda (console replacement)
      apt: name=tilda state=present force=yes
    - name: install vagrant
      apt: name=vagrant state=present force=yes
    - name: install zsh
      apt: name=zsh state=present force=yes
    - name: install oh-my-zsh
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      become_user: damxam
    # Set git stuff (Todo: test on fresh box)
    - name: "Set git user email"
      shell: git config --global user.email "damxam@gmail.com"
    - name: "Set git user name"
      shell: git config --global user.name "Max Wittmann"

    # Download custom oh-my-zsh
    - name: "Remove customs repo if exist"
      file:
        path: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/custom/MyZsh"
        state: absent
    - name: "Remove .git dir if exists"
      file:
        path: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/custom/.git"
        state: absent
    - name: "Remove old customs if exists"
      file:
        path: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/custom/customs.zsh"
        state: absent

    - name: "Download oh-my-zsh repo"
      git:
        repo: "https://github.com/waxmittmann/MyZsh.git"
        dest: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/custom/MyZsh"
        accept_hostkey: True
        force: Yes
    #- name: "Move all contents from customs repo 1"
    #  shell: "mv {{ lookup('env', 'HOME') }}/.oh-my-zsh/custom/MyZsh/* {{ lookup('env', 'HOME') }}/.oh-my-zsh/custom"
    #- name: "Move all contents from customs repo 2"
    #  shell: "mv {{ lookup('env', 'HOME') }}/.oh-my-zsh/custom/MyZsh/.* {{ lookup('env', 'HOME') }}/.oh-my-zsh/custom"
    - name: "Move .git from customs repo"
      shell: "mv -f .git .."
      args:
        chdir: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/custom/MyZsh"
    - name: "Move customs.zsh from customs repo"
      shell: "mv -f customs.zsh .."
      args:
        chdir: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/custom/MyZsh"
    - name: "Set customs to be owned by user"
      file:
        path: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/custom"
        recurse: Yes
        owner: damxam
        group: damxam

    #Create my standard directory structure; there's a role in creating the work
    #space and then pulling all your projects.
    - name: Create Workspaces top-level dir
      file:
        path: "{{ lookup('env', 'HOME') }}/Workspaces"
        state: directory
        owner: damxam
        group: damxam
    - name: Create Scala workspace subdir
      file:
        path: "{{ lookup('env', 'HOME') }}/Workspaces/Scala"
        state: directory
        owner: damxam
        group: damxam
    - name: Create Java workspace subdir
      file:
        path: "{{ lookup('env', 'HOME') }}/Workspaces/Tools"
        state: directory
        owner: damxam
        group: damxam
    - name: Create Javascript workspace subdir
      file:
        path: "{{ lookup('env', 'HOME') }}/Workspaces/Projects"
        state: directory
        owner: damxam
        group: damxam
    - name: Create Web workspace subdir
      file:
        path: "{{ lookup('env', 'HOME') }}/Workspaces/IDEs"
        state: directory
        owner: damxam
        group: damxam
      #How could we safely get our notes in here automatically?
    - name: Create Notes workspace subdir where we keep our notes
      file:
        path: "{{ lookup('env', 'HOME') }}/Notes"
        state: directory
        owner: damxam
        group: damxam

    # Install intellij
    #- name: Download IntelliJ
    #  url: https://download.jetbrains.com/idea/ideaIC-2017.3.4.tar.gz
    #  dest: /AnsibleInstall
    - name: Check whether IntelliJ exists
      stat:
        path: "{{ lookup('env', 'HOME') }}/Workspaces/IDEs/IntelliJ"
      register: intellij_installed
    - name: Create dir for IntelliJ
      file:
        path: "{{ lookup('env', 'HOME') }}/Workspaces/IDEs/IntelliJ"
        state: directory
        owner: damxam
        group: damxam
      when: not intellij_installed.stat.exists
    # TODO: Only if intellij doesn't exist
    - name: Download and Extract to IDEs
      unarchive:
        src: https://download.jetbrains.com/idea/ideaIC-2017.3.4.tar.gz
        #src: /AnsibleInstall/ideaIC-2017.3.4.tar.gz
        dest: "{{ lookup('env', 'HOME') }}/Workspaces/IDEs/IntelliJ"
        remote_src: yes
      when: not intellij_installed.stat.exists
    # TODO: Create shortcut in workspace

    # Home dir should be input param
    - name: Check whether ssh key exists
      stat:
        path: /home/damxam/.ssh/id_rsa
      register: ssh_key
    - name: Create ssh key
      shell: "ssh-keygen -t rsa -f {{ lookup('env', 'HOME') }}/.ssh/id_rsa -q -N \"\" -C \"damxam@gmail.com\""
      args:
        creates: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa"
      when: not ssh_key.stat.exists
    - name: Change .ssh private key owner to damxam (TODO damxam should be param)
      file:
        path: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa"
        owner: damxam
        group: damxam
        mode: 0600
    - name: Change .ssh public key owner to damxam (TODO damxam should be param)
      file:
        path: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa.pub"
        owner: damxam
        group: damxam
        mode: 0644
