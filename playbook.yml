# Man, if I had a properly *testable* dev setup, that'd be sweet.
---
- hosts: all

  #~/Install doesn't work as the dir so hard-coding for now; at very least
  #   should be variable so we could theoretically use a base box w.out /vagrant
  #   also could just generate dir from root. Let's do that.
  # Actually I like it better in not a home BUT it should work... happens in
  #   the zsh role.
  pre_tasks:
    - name: Create Install dir where we'll store all our binaries
      file: path=/AnsibleInstall state=directory
    - name: Create Java dir inside Install dir where we'll store all our binaries
      file: path=/AnsibleInstall/Java state=directory
    #Would love to do this not cludgy; one way would be to have the base box
    #just have it, but meh. Even betterer would be to figure out how to just
    #force installation of dependencies.
    - name: Install openjdk-6, which other stuff will otherwise complain about
      #shell: sudo apt-get install openjdk-6-jre
      shell: yes 'Y' | apt-get install openjdk-6-jre
      ignore_errors: yes
    #Urm, top doesn't fail anymore, don't need?
    - name: ...which will fail, so we will need to install the dependencies
      shell: yes 'Y' | sudo apt-get -f install

  roles:
    # Two options here;
    #
    # Option 1) make these *not* auto-git dirs so they are commited,
    # update manually. Then we know the state. But if role breaks, we won't
    # get update.
    #
    # Option 2) Keep as git repo so it updates, but then might break stuff if
    #   it's doing something unexpected.
    - { role: ansible-role-intellij, intellij_version: 2016.1.1, intellij_tmp: /AnsibleInstall/IntelliJ.deb }
    - { role: ansible-oracle-java, java_download_path: /AnsibleInstall/Java }
    - { role: ansible-role-scala, scala_sbt_tmp_deb: /AnsibleInstall/sbt.deb}
    - ansible-ohmyzsh
    #role: foo_app_instance, dir: '/opt/a',  app_port: 5000
  sudo: true

  tasks:
    #Install update apt stuff
    - name: add atom path to repo
      apt_repository: repo='ppa:webupd8team/atom' state=present
    - name: update apt cache
      apt: update_cache=yes

    #Install atom; how do we import settings for this and other stuff automatically?
    - name: install atom
      apt: name=atom state=present force=yes

    #Install npm (will have to download somewhere and setup)
    #curl -sL https://deb.nodesource.com/setup_5.x | sudo -E bash -
    #sudo apt-get install -y nodejs

    #DB and standard stuff
    - name: install mysql
      apt: name=mysql-server state=present force=yes
    - name: install git
      apt: name=git state=present force=yes
    - name: install tilda (console replacement)
      apt: name=tilda state=present force=yes
    - name: install vagrant
      apt: name=vagrant state=present force=yes

    #Create my standard directory structure; there's a role in creating the work
    #space and then pulling all your projects.
    - name: Create Workspaces top-level dir
      file: path={{ ansible_env.HOME }}/Workspaces state=directory
    - name: Create Scala workspace subdir
      file: path={{ ansible_env.HOME }}/Workspaces/Scala state=directory
    - name: Create Java workspace subdir
      file: path={{ ansible_env.HOME }}/Workspaces/Java state=directory
    - name: Create Javascript workspace subdir
      file: path={{ ansible_env.HOME }}/Workspaces/Javascript state=directory
    - name: Create Web workspace subdir
      file: path={{ ansible_env.HOME }}/Workspaces/Web state=directory
      #How could we safely get our notes in here automatically?
    - name: Create Notes workspace subdir where we keep our notes
      file: path={{ ansible_env.HOME }}/Notes state=directory

      #It could open everything and then create a screenshot at the end for testing!
