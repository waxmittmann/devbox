---
- hosts: all

  pre_tasks:
    - name: Create Install dir where we'll store all our binaries
      file: path=/AnsibleInstall state=directory

  roles:
    # Todo: These were from separate repos; inline or do properly. Does nothing atm.
    - { role: ansible-role-intellij, intellij_version: 2016.1.1, intellij_tmp: /AnsibleInstall/IntelliJ.deb }
    - { role: ansible-role-scala, scala_sbt_tmp_deb: /AnsibleInstall/sbt.deb}
  sudo: true

  tasks:
    # Add apt repos
    - name: add atom path to repo
      apt_repository: repo='ppa:webupd8team/atom' state=present
    - name: add java repo
      apt_repository: repo='ppa:webupd8team/java' state=present
    - name: Add sbt repo, part 1
      shell: "echo \"deb https://dl.bintray.com/sbt/debian /\" | sudo tee -a /etc/apt/sources.list.d/sbt.list"
    - name: Add sbt repo, part 2
      shell: "sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823"
    - name: update apt cache (AFTER adding repos)
      apt: update_cache=yes

    #Install atom; how do we import settings for this and other stuff automatically?
    - name: install atom
      apt: name=atom state=present force=yes

    - name: java 8 license, 1
      shell: echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections

    - name: java 8 license, 2
      shell: echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections

    - name: install java 8
      apt: name=oracle-java8-installer state=present force=yes

    #DB and standard stuff
    - name: install git
      apt: name=git state=present force=yes
    - name: install gitk
      apt: name=gitk state=present force=yes
    - name: install terminator (console replacement)
      apt: name=terminator state=present force=yes
    - name: install vagrant
      apt: name=vagrant state=present force=yes
    - name: install zsh
      apt: name=zsh state=present force=yes
    - name: install oh-my-zsh
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      become_user: damxam
    - name: install sbt
      apt: name=sbt state=present force=yes
    - name: run sbt (to force actual install)
      shell: sbt sbtVersion
    - name: install scala from .deb (do same for sbt)
      apt:
        deb: https://www.scala-lang.org/files/archive/scala-2.12.1.deb

      # Set git stuff
    - name: "Set git user email"
      shell: git config --global user.email "damxam@gmail.com"
      become: yes
      become_user: damxam
    - name: "Set git user name"
      shell: git config --global user.name "Max Wittmann"
      become: yes
      become_user: damxam

    # Download my zsh extensions; would be nicer to update if exists maybe.
    - name: "Remove customs repo files if they exist"
      file:
        path: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/custom/MyZsh"
        state: absent


    - name: "Remove customs repo if exist"
      file:
        path: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/custom/MyZsh"
        state: absent
    - name: "Remove .git dir if exists"
      file:
        path: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/custom/.git"
        state: absent
    - name: "Remove old customs if exists"
      file:
        path: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/custom/customs.zsh"
        state: absent

    - name: "Download my zsh extension repo"
      git:
        repo: "https://github.com/waxmittmann/MyZsh.git"
        dest: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/custom/MyZsh"
        accept_hostkey: True
        force: Yes
    - name: "Move .git from customs repo"
      shell: "mv -f .git .."
      args:
        chdir: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/custom/MyZsh"
    - name: "Move customs.zsh from customs repo"
      shell: "mv -f customs.zsh .."
      args:
        chdir: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/custom/MyZsh"
    - name: "Set customs to be owned by user"
      file:
        path: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/custom"
        recurse: Yes
        owner: damxam
        group: damxam

    #Create my standard directory structure; there's a role in creating the work
    # space and then pulling all your projects.
    - name: create Workspace and notes dirs
      file:
        path: "{{ lookup('env', 'HOME') }}/{{ item }}"
        state: directory
        owner: damxam
        group: damxam
        mode: 0775
      with_items: [
        "/Notes/",
        "/Workspaces/",
        "/Workspaces/IDEs",
        "/Workspaces/Tools",
        "/Workspaces/Libaries",
        "/Workspaces/Libaries/bin",
        "/Workspaces/Projects",
        "/Workspaces/Projects/Useful",
        "/Workspaces/Projects/Experimental",
        "/Workspaces/Projects/Learning"
      ]

    # Clone projects I need / am working on (TODO: better, not one each like that)
    - name: "Download my zsh extension repo"
      git:
        repo: "https://github.com/waxmittmann/devbox.git"
        dest: "{{ lookup('env', 'HOME') }}/Workspaces/Projects/Useful/devbox"
        accept_hostkey: True
        force: Yes
      become: yes
      become_user: damxam

    # Install intellij
    # Todo: Check that the folder contains something
    - name: Check whether IntelliJ exists
      stat:
        path: "{{ lookup('env', 'HOME') }}/Workspaces/IDEs/IntelliJ"
      register: intellij_installed
    - name: Create dir for IntelliJ
      file:
        path: "{{ lookup('env', 'HOME') }}/Workspaces/IDEs/IntelliJ"
        state: directory
        owner: damxam
        group: damxam
      when: not intellij_installed.stat.exists
    - name: Download intelliJ
      get_url:
        url: http://download.jetbrains.com/idea/ideaIC-2017.3.4.tar.gz
        dest: "{{ lookup('env', 'HOME') }}/Workspaces/IDEs/IntelliJ"
        owner: damxam
        group: damxam
      when: not intellij_installed.stat.exists
    - name: Download and Extract to IDEs
      unarchive:
        src: "{{ lookup('env', 'HOME') }}/Workspaces/IDEs/IntelliJ/ideaIC-2017.3.4.tar.gz"
        dest: "{{ lookup('env', 'HOME') }}/Workspaces/IDEs/IntelliJ"
        remote_src: Yes
      when: not intellij_installed.stat.exists
    - name: Create link in /usr/bin
      file:
        src: "{{ lookup('env', 'HOME') }}/Workspaces/IDEs/IntelliJ/idea-IC-173.4548.28/bin/idea.sh"
        dest: /usr/bin/idea
        state: link
        owner: damxam
        group: damxam

    # Home dir should be input param
    - name: Check whether ssh dir exists
      stat:
        path: "{{ lookup('env', 'HOME') }}/.ssh"
      register: ssh_dir_exists
    - name: Create dir for IntelliJ
      file:
        path: "{{ lookup('env', 'HOME') }}/.ssh"
        state: directory
        owner: damxam
        group: damxam
      when: not ssh_dir_exists.stat.exists
    - name: Check whether ssh key exists
      stat:
        path: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa"
      register: ssh_key
    - name: Create ssh key
      shell: "ssh-keygen -t rsa -f {{ lookup('env', 'HOME') }}/.ssh/id_rsa -q -N \"\" -C \"damxam@gmail.com\""
      args:
        creates: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa"
      when: not ssh_key.stat.exists
    - name: Change .ssh private key owner to damxam (TODO damxam should be param)
      file:
        path: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa"
        owner: damxam
        group: damxam
        mode: 0600
    - name: Change .ssh public key owner to damxam (TODO damxam should be param)
      file:
        path: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa.pub"
        owner: damxam
        group: damxam
        mode: 0644
