---

# Add apt repos
- name: Add apt repos
  block:
  - name: add atom path to repo
    apt_repository: repo='ppa:webupd8team/atom' state=present
  - name: add java repo
    apt_repository: repo='ppa:webupd8team/java' state=present
  - name: Add neo4j key
    apt_key:
      url: https://debian.neo4j.org/neotechnology.gpg.key
      state: present
    retries: 5
    delay: 1
  - name: add neo4j repo
    apt_repository:
      repo: 'deb http://debian.neo4j.org/repo stable/'
      state: present
  # Overwriting here (removed -a); undo if problems
  - name: Add sbt repo, part 1
    shell: "echo \"deb https://dl.bintray.com/sbt/debian /\" | sudo tee /etc/apt/sources.list.d/sbt.list"
  # Alternate keyserver: pgp.mit.edu (TODO: Try alternate if ubuntu down)
  - name: Add sbt repo, part 2
    #shell: "sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823"
    shell: "sudo apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823"
    become_user: true
    become: root
  - name: update apt cache (AFTER adding repos)
    apt: update_cache=yes
    retries: 5
    delay: 1
# Install java; needs some extra license reading work
- name: install java
  block:
  - name: java 8 license, 1
    shell: echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections
  - name: java 8 license, 2
    shell: echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections
  - name: install java 8
    apt: name=oracle-java8-installer state=present force=yes

- name: Read apt items
  include_vars:
    file: ./configs/aptinstalls.yml

- name: install things via apt
  apt:
    name: "{{ item }}"
    state: present
    force: yes
  with_items: "{{ aptinstall_items }}"

# - name: "Install virtualbox guest additions (TODO: Make virtualbox only)"
#   apt:
#     name: "{{ item }}"
#     state: present
#     force: yes
#   with_items: [
#     "virtualbox-guest-dkms",
#     "linux-headers-virtual"
#   ]

- name: install optional things via apt
  apt:
    name: "{{ item }}"
    state: present
    force: yes
  with_items: [
    "qdirstat"
  ]
  ignore_errors: yes

- name: Install draw.io
  block:
    - stat:
        path: "/usr/local/bin/draw.io"
      register: drawio_exists
    - apt:
        deb: https://github.com/jgraph/drawio-desktop/releases/download/v8.0.6/draw.io-amd64-8.0.6.deb
        state: present
      when: not drawio_exists.stat.exists

- name: Install scala
  block:
  - name: Check whether scala is installed
    stat:
      path: "/usr/bin/scala"
    register: scala_exists
  - name: install scala from .deb (do same for sbt)
    apt:
      deb: https://www.scala-lang.org/files/archive/scala-2.12.1.deb
      state: present
    when: not scala_exists.stat.exists

- name: Install slack
  block:
    - name: Check whether slack is installed
      stat:
        path: /usr/bin/slack
      register: slack_exists
    - name: install slack
      apt:
        deb: https://downloads.slack-edge.com/linux_releases/slack-desktop-3.0.5-amd64.deb
        state: present
      when: not slack_exists.stat.exists

- name: Install mailspring
  command: sudo snap install mailspring --classic

# - name: Install kubernetes + friends
#   block:
#     - name: Install kubectrl
#       command: sudo snap install kubectl --classic
#     - name: Install minikube
#       get_url:
#         url: https://storage.googleapis.com/minikube/releases/v0.25.0/minikube-linux-amd64
#         dest: /usr/local/bin/minikube
#         mode: 0755
#     - name: Download helm
#       get_url:
#         url: https://kubernetes-helm.storage.googleapis.com/helm-v2.8.0-linux-amd64.tar.gz
#         dest: /AnsibleInstall
#     - name: Extract
#       unarchive:
#         src: /AnsibleInstall/helm-v2.8.0-linux-amd64.tar.gz
#         dest: /AnsibleInstall
#         remote_src: Yes
#     - name: Move to /usr/bin
#       copy: remote_src=True src=/AnsibleInstall/linux-amd64/helm dest=/usr/bin/ mode=0755
